---
# - name: Removing an invalid Docker repository
#   file:
#     path: /etc/apt/sources.list.d/docker.list
#     state: absent

# - name: Remove containers
#   command: docker rm -f nginx_container php_container mysql_container
#   ignore_errors: true

- name: Installing Docker
  become: true
  block:
    - name: Adding Universe
      apt_repository:
        repo: "deb http://us.archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }} universe"
        state: present

    - name: Installing additional packages
      apt: name={{ item }} state=latest update_cache=true cache_valid_time=86400
      loop:
        [
          "apt-transport-https",
          "ca-certificates",
          "curl",
          "software-properties-common",
          "python3-pip",
          "virtualenv",
          "python3-setuptools",
        ]

    - name: Adding Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        keyring: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Adding Docker Repository
      apt_repository:
        repo: >
          deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        update-cache: true
        filename: docker

    - name: Updating apt and install docker-ce
      apt: update_cache=true name=docker-ce state=latest

    - name: Installing Docker Module for Python
      apt:
        name: python3-docker
        state: present

    - name: Checking that Docker is installed and rebooted
      service:
        name: docker
        state: restarted
        enabled: true

    - name: Starting and enabling Docker service
      service:
        name: docker
        state: started
        enabled: true

  when: ansible_facts['distribution'] == 'Ubuntu'
